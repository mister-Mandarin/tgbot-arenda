from aiogram import Router
from aiogram.types import Message
from db.user import get_user, create_user
from aiogram.fsm.context import FSMContext
from aiogram.filters import CommandStart
from keyboards.menu import menu_main
from handlers.profile.edit import update_phone

router = Router()

@router.message(CommandStart())
async def cmd_start(message: Message, state: FSMContext):
    tg_user = message.from_user
    db_user = get_user(tg_user.id)

    if not db_user:
        create_user(
            user_id=tg_user.id,
            first_name=tg_user.first_name or "",
            last_name=tg_user.last_name,
            username=tg_user.username
        )
            
        await message.answer(
            f"üëã –ü—Ä–∏–≤–µ—Ç {tg_user.first_name}! –¢—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –≤ —Å–∏—Å—Ç–µ–º–µ.\n\n"
            f"üì± –ß—Ç–æ–±—ã –º—ã –º–æ–≥–ª–∏ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –≤–∞–º–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ —É–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ üëá"
            )
        await update_phone(message, state)
    else:
        if not db_user["phone"]:
            await update_phone(message, state)
        else:
            await message.answer(f"üëã –° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, {db_user['first_name']}!", reply_markup=menu_main)